//1. Create a collection named orders.
db.createCollection('orders')
var orders = db.orders

//2. Insert at least 3 documents that represent orders. IMPORTANT: See section below for fields. Order dates should be: 2017-02-03, 2017-04-04,
2017-01-02
orders.insert({orderDate: new Date('2017-02-03'), orderTotal: 50.55, lineItems: [{unitPrice:10}, {quantity:3}, {productName: 'marble tile'}]});
orders.insert({orderDate: new Date('2017-04-04'), orderTotal: 122.75, lineItems: [{unitPrice:35}, {quantity:15}, {productName: 'grey paint'}]});
orders.insert({orderDate: new Date('2017-01-02'), orderTotal: 2089.25, lineItems: [{unitPrice:350}, {quantity:7}, {productName: 'wood vanity'}]});

//3. Find all orders and make them look pretty.
orders.find().pretty();

//4. Find all orders with an orderDate that is after 1/31/2017.
orders.find({orderDate: {$gt: new Date('2017-01-31')}})

//5. Change the orderTotal from 2/3/2017 to 63 dollars (you do NOT have to ensure the lineItems' unitPrice * quantity add up to the orderTotal)
orders.update({orderDate: new Date('2017-02-03')}, {$set: {orderTotal: 63}});

//6. Add another lineItem to the order from 4/4/2017


//7. Change the first lineItem in the order from 1/2/2017 to be for 2 'transistor radio's


//8. Find orders with lineItems that have a quantity that is less than 10, but greater than 2. You will have to research $and
